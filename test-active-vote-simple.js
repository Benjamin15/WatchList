#!/usr/bin/env node

/**
 * Test simple de la logique de vote actif uniquement
 */

const SERVER_BASE_URL = 'http://localhost:3000';

async function testActiveVoteCheck() {
  console.log('üß™ Test simple de la v√©rification de vote actif\n');

  try {
    const roomId = 1; // Utiliser une room existante

    // 1. V√©rifier les votes existants
    console.log('1. V√©rification des votes existants...');
    const votesResponse = await fetch(`${SERVER_BASE_URL}/api/votes/room/${roomId}`);
    const votesData = await votesResponse.json();
    const votes = votesData.data || [];
    
    console.log(`‚úÖ Votes trouv√©s: ${votes.length}`);
    
    // Simuler la logique c√¥t√© client
    const hasActiveVote = votes.some(vote => vote.status === 'active');
    console.log(`‚úÖ Vote actif d√©tect√©: ${hasActiveVote}`);
    
    // Simuler l'√©tat du bouton
    console.log('\nüñ±Ô∏è  √âtat du bouton "Cr√©er un vote":');
    if (hasActiveVote) {
      console.log('   ‚ùå D√âSACTIV√â - Un vote est d√©j√† en cours');
      console.log('   üí¨ Message: "Il y a d√©j√† un vote en cours dans cette room"');
    } else {
      console.log('   ‚úÖ ACTIV√â - Aucun vote actif');
      console.log('   üí¨ Message: "Proposer des films"');
    }

    // Tester la fonction hasActiveVote()
    console.log('\nüìã Test de la fonction hasActiveVote():');
    const testResult = testHasActiveVoteFunction(votes);
    console.log(`   R√©sultat: ${testResult}`);
    
    // Tester le comportement de l'interface
    console.log('\n[UI] Test du comportement de l\'interface:');
    testUIBehavior(hasActiveVote);

    console.log('\nüéâ Test termin√© avec succ√®s!');

  } catch (error) {
    console.error('‚ùå Erreur durant le test:', error.message);
    process.exit(1);
  }
}

function testHasActiveVoteFunction(votes) {
  // Simulation de la fonction hasActiveVote du RoomScreen
  return votes.some(vote => vote.status === 'active');
}

function testUIBehavior(hasActiveVote) {
  console.log('   Styles appliqu√©s:');
  
  if (hasActiveVote) {
    console.log('     - fabMenuItem: styles.fabMenuItemDisabled (opacity: 0.5)');
    console.log('     - fabMenuIcon: styles.fabMenuIconDisabled (opacity: 0.5)');
    console.log('     - fabMenuText: styles.fabMenuTextDisabled (opacity: 0.5)');
    console.log('     - fabMenuDescription: styles.fabMenuDescriptionDisabled (opacity: 0.5)');
    console.log('     - TouchableOpacity disabled: true');
    console.log('     - Description: "Vote en cours..." au lieu de "Proposer des films"');
  } else {
    console.log('     - Styles normaux appliqu√©s');
    console.log('     - TouchableOpacity disabled: false');
    console.log('     - Description: "Proposer des films"');
  }
  
  console.log('\n   Comportement au clic:');
  if (hasActiveVote) {
    console.log('     - Alert affich√©: "Vote actif existant"');
    console.log('     - Message: "Il y a d√©j√† un vote en cours dans cette room"');
    console.log('     - Navigation bloqu√©e');
  } else {
    console.log('     - Navigation vers CreateVote screen');
    console.log('     - Param√®tres: { roomId }');
  }
}

if (require.main === module) {
  testActiveVoteCheck();
}

module.exports = { testActiveVoteCheck, testHasActiveVoteFunction, testUIBehavior };
