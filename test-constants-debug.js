#!/usr/bin/env node

/**
 * Test de validation des constantes API_ENDPOINTS
 * Ce script v√©rifie que les endpoints sont bien configur√©s
 */

console.log('üîç Test des constantes API_ENDPOINTS');
console.log('===================================');

// Simuler l'import comme dans l'app
const fs = require('fs');
const path = require('path');

const constantsPath = path.join(__dirname, 'mobile/src/constants/index.ts');
const constantsContent = fs.readFileSync(constantsPath, 'utf8');

console.log('üìÑ Contenu du fichier constants/index.ts:');
console.log('');

// Extraire la section WATCHLIST
const watchlistMatches = constantsContent.match(/WATCHLIST:.*$/gm);
if (watchlistMatches) {
  watchlistMatches.forEach(match => {
    console.log(`‚úÖ ${match}`);
  });
} else {
  console.log('‚ùå Aucune d√©finition WATCHLIST trouv√©e');
}

console.log('');

// V√©rifier que c'est bien /items et non /watchlist
if (constantsContent.includes('/items')) {
  console.log('‚úÖ Endpoint configure pour /items');
} else {
  console.log('‚ùå Endpoint /items non trouv√©');
}

if (constantsContent.includes('/watchlist')) {
  console.log('‚ö†Ô∏è  Ancien endpoint /watchlist encore pr√©sent');
} else {
  console.log('‚úÖ Aucun ancien endpoint /watchlist trouv√©');
}

console.log('');
console.log('üéØ Test de la fonction WATCHLIST:');

// Simuler l'ex√©cution de la fonction
const roomIdTest = '23d6673e8735';
const expectedResult = `/rooms/${roomIdTest}/items`;

console.log(`üìã roomId test: ${roomIdTest}`);
console.log(`üìã R√©sultat attendu: ${expectedResult}`);

// Extraire et tester la fonction
const functionMatch = constantsContent.match(/WATCHLIST:\s*\(roomId:[^)]+\)\s*=>\s*`([^`]+)`/);
if (functionMatch) {
  const template = functionMatch[1];
  console.log(`üìã Template trouv√©: ${template}`);
  
  // Remplacer ${roomId} par la valeur test
  const result = template.replace('${roomId}', roomIdTest);
  console.log(`üìã R√©sultat g√©n√©r√©: ${result}`);
  
  if (result === expectedResult) {
    console.log('‚úÖ La fonction g√©n√®re la bonne URL');
  } else {
    console.log('‚ùå La fonction g√©n√®re une URL incorrecte');
  }
} else {
  console.log('‚ùå Impossible d\'extraire la fonction WATCHLIST');
}

console.log('');
console.log('üí° Si l\'app montre encore /watchlist dans les logs:');
console.log('   1. Cache Metro non vid√© correctement');  
console.log('   2. Import incorrect dans api.ts');
console.log('   3. Build/bundle non r√©g√©n√©r√©');
console.log('');
console.log('üîß Solutions recommand√©es:');
console.log('   1. npx expo start --clear');
console.log('   2. Red√©marrer compl√®tement l\'app mobile');
console.log('   3. V√©rifier que l\'import est correct dans api.ts');
